apply plugin: 'java-library'
apply plugin: 'name.remal.build-time-constants'

dependencies {
    optional 'name.remal.gradle-api:gradle-api'

    classesRelocation 'org.apache.commons:commons-compress:1.27.1'
    classesRelocation 'org.json:json:20250107'

    compileOnly 'org.apiguardian:apiguardian-api:1.1.2'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.9.3'

    optional 'org.ow2.asm:asm-util'

    implementation 'org.ow2.asm:asm'
    implementation 'org.ow2.asm:asm-tree'
    implementation 'org.ow2.asm:asm-commons'


    testImplementation 'com.google.jimfs:jimfs:1.3.0'
    testImplementation 'org.apache.commons:commons-compress:1.27.1'
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

repositories {
    ivy {
        name = 'graalvmReachabilityMetadataTest'
        url = 'https://github.com'
        patternLayout {
            artifact('[organisation]/[module]/releases/download/[revision]/[artifact]-[revision].[ext]')
        }
        metadataSources {
            artifact()
        }
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

SourceSet componentTestSourceSet = testSourceSets.create('componentTest')

dependencies {
    componentTestImplementation "oracle:graalvm-reachability-metadata:${property('graalvm-reachability-metadata.version')}@zip"

    componentTestImplementation platform('com.fasterxml.jackson:jackson-bom:2.19.0')
    componentTestImplementation 'com.fasterxml.jackson.core:jackson-databind'
    componentTestImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-guava'
    componentTestImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    componentTestImplementation 'joda-time:joda-time:2.14.0'
    componentTestImplementation 'net.sf.saxon:Saxon-HE:12.6'
    componentTestImplementation 'io.github.classgraph:classgraph:4.8.179'
}

if (!tasks.names.contains(componentTestSourceSet.jarTaskName)) {
    tasks.register(componentTestSourceSet.jarTaskName, Jar) { jar ->
        jar.description = "Assembles a jar archive containing the classes of the '${componentTestSourceSet.name}' feature."
        jar.group = 'build'
        jar.from(componentTestSourceSet.output)
        jar.archiveClassifier = componentTestSourceSet.name
    }
}

tasks.named(componentTestSourceSet.name, Test) {
    TaskProvider componentTestJar = tasks.named(componentTestSourceSet.jarTaskName, Jar)
    dependsOn(componentTestJar)
    inputs.file(componentTestJar.flatMap { it.archiveFile })

    onlyIf {
        systemProperty("test-classes-jar", componentTestJar.get().archiveFile.get().asFile.absolutePath)
        return true
    }
}
