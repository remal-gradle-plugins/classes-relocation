/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

buildscript {
    String rootGroupId = project.ext.rootGroupId = "name.remal.gradle-plugins.${rootProject.name}"
    String rootArtifactId = project.ext.rootArtifactId = rootProject.name
    String rootSnapshotVersion = project.ext.rootSnapshotVersion = '2-SNAPSHOT'
    dependencies {
        //classpath("$rootGroupId:$rootArtifactId:$rootSnapshotVersion") { version { strictly(rootSnapshotVersion) } }
        classpath 'name.remal.gradle-plugins.toolkit:build-logic:0-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

allprojects {
    group = project.rootGroupId
    version = project.rootSnapshotVersion
}

apply plugin: 'name.remal.toolkit.build-logic'

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

apply plugin: 'java-gradle-plugin'

dependencies {
    relocateClasses 'org.apache.commons:commons-compress:1.27.1'

    optional 'org.ow2.asm:asm-util'

    implementation 'org.ow2.asm:asm-tree'
    implementation 'org.ow2.asm:asm-commons'


    testImplementation 'com.google.jimfs:jimfs:1.3.0'
}

gradlePlugin {
    plugins {
        'name.remal.classes-relocation' {
            id = 'name.remal.classes-state'
            implementationClass = 'name.remal.gradle_plugins.classes_relocation.ClassesRelocationPlugin'
            displayName = 'Classes state'
            description = property('repository-description')
        }
    }
}
